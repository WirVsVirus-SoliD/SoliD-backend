# Configuration file
# key = value
# OIDC Configuration
quarkus.oidc.auth-server-url=${keycloak.server.url}/realms/solid
quarkus.oidc.client-id=solid
quarkus.oidc.credentials.secret=${keycloak-secret}

# database
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${pguser}
quarkus.datasource.password = ${pgpasswd}
quarkus.datasource.jdbc.url = jdbc:postgresql://${pghost}:${pgport}/solid

# drop and create the database at startup
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script = default_data.sql

# REST client definitions
de.solid.backend.clients.GeocodeRestClient/mp-rest/url=https://geocode.xyz?geoit=json&auth=${geocodeKey}
de.solid.backend.clients.GeocodeRestClient/mp-rest/scope=javax.inject.Singleton

de.solid.backend.clients.KeycloakRestClient/mp-rest/url=${keycloak.server.url}
de.solid.backend.clients.KeycloakRestClient/mp-rest/scope=javax.inject.Singleton

# enable swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api

# build uber jar
quarkus.package.uber-jar=true
quarkus.package.output-name=solid
quarkus.package.runner-suffix=-backend

# cors
quarkus.http.cors=true

# caching
quarkus.cache.caffeine."adminJWTCache".expire-after-write=180S

# custom properties
ticket.timeout.hours=24