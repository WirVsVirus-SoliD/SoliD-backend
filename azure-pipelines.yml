variables:
  devops_rootdir: /opt/solid
  devops_dir: $(devops_rootdir)/backend
  backend_dir: /opt/backend/backend-$(Build.SourceBranchName)
  backend_rooturl: solid-backend.52-174-17.190.nip.io
  env_file: .env

trigger:
  branches:
     include:
       - master
       - quarkus

stages:
- stage: app
  jobs:
    - job: app
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'
      - task: GithubRelease@0 
        displayName: 'Remove GitHub old release'
        continueOnError: true      
        inputs:
          gitHubConnection: github.com_serapas
          repositoryName: '$(Build.Repository.Name)'  
          action: delete
          tagSource: manual
          tag: $(Build.SourceBranchName)
      - task: GithubRelease@0 
        displayName: 'Create GitHub Release'      
        inputs:
          gitHubConnection: github.com_serapas
          tagSource: manual
          tag: $(Build.SourceBranchName)
          repositoryName: '$(Build.Repository.Name)'  
          assets: |
               **/*.jar

- stage: image
  dependsOn:
    - app
  condition: succeeded('app')
  jobs:
    - job: image
      steps:
      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          containerRegistry: dockerhub
      - task: Docker@2
        displayName: build
        inputs:
          command: build
          arguments: --build-arg branch=$(Build.SourceBranch)
          repository: wirvsvirussolid/solid
          tags: |
            backend-$(Build.SourceBranchName)
      - task: Docker@2
        displayName: push
        inputs:
          command: push 
          containerRegistry: dockerhub
          repository: wirvsvirussolid/solid
          tags: |
            backend-$(Build.SourceBranchName)

- stage: deploy 
  dependsOn:
    - image
  jobs:
  - deployment: VMDeploy
    displayName: deploy
    environment:
      name: SoliD
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                sudo mkdir -p $(backend_dir)
                sudo rsync -av $(devops_dir)/ $(backend_dir)/
                cd $(app_dir)
                sudo sed -i -e "s/BACKEND_VIRTUAL_HOST.*$/BACKEND_VIRTUAL_HOST=$(Build.SourceBranchName).$(backend_rooturl)/" $(env_file)
                sudo docker-compose stop backend
                sudo docker-compose pull --parallel
                sudo docker-compose up -d --no-deps backend
